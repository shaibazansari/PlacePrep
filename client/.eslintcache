[{"E:\\project\\PlacePrep\\client\\src\\index.js":"1","E:\\project\\PlacePrep\\client\\src\\store\\configureStore.js":"2","E:\\project\\PlacePrep\\client\\src\\App.js":"3","E:\\project\\PlacePrep\\client\\src\\store\\reducers\\reducer.js":"4","E:\\project\\PlacePrep\\client\\src\\components\\layout\\Alerts.js":"5","E:\\project\\PlacePrep\\client\\src\\components\\auth\\Resetpassword.js":"6","E:\\project\\PlacePrep\\client\\src\\components\\auth\\Register.js":"7","E:\\project\\PlacePrep\\client\\src\\store\\actions\\authActions.js":"8","E:\\project\\PlacePrep\\client\\src\\components\\routing\\TestRoute.js":"9","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\QuizPage.js":"10","E:\\project\\PlacePrep\\client\\src\\components\\routing\\PrivateRoute.js":"11","E:\\project\\PlacePrep\\client\\src\\components\\layout\\Home.js":"12","E:\\project\\PlacePrep\\client\\src\\components\\auth\\Login.js":"13","E:\\project\\PlacePrep\\client\\src\\store\\reducers\\alertReducers.js":"14","E:\\project\\PlacePrep\\client\\src\\store\\reducers\\authReducers.js":"15","E:\\project\\PlacePrep\\client\\src\\store\\reducers\\quizReducers.js":"16","E:\\project\\PlacePrep\\client\\src\\store\\reducers\\practiceProblemReducers.js":"17","E:\\project\\PlacePrep\\client\\src\\store\\reducers\\codeReducers.js":"18","E:\\project\\PlacePrep\\client\\src\\store\\actions\\alertActions.js":"19","E:\\project\\PlacePrep\\client\\src\\components\\auth\\MessagePanel.js":"20","E:\\project\\PlacePrep\\client\\src\\components\\auth\\UserProfile.js":"21","E:\\project\\PlacePrep\\client\\src\\store\\actions\\actionTypes.js":"22","E:\\project\\PlacePrep\\client\\src\\components\\auth\\ResPassModal.js":"23","E:\\project\\PlacePrep\\client\\src\\store\\actions\\quizActions.js":"24","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\QuizQues.js":"25","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\QuizTimer.js":"26","E:\\project\\PlacePrep\\client\\src\\components\\layout\\Navbar.js":"27","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\QuizCardPage.js":"28","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\CreateQuiz.js":"29","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\EditQuiz.js":"30","E:\\project\\PlacePrep\\client\\src\\components\\layout\\Spinner.js":"31","E:\\project\\PlacePrep\\client\\src\\components\\dashboard\\UserTable.js":"32","E:\\project\\PlacePrep\\client\\src\\components\\coding\\Coding.js":"33","E:\\project\\PlacePrep\\client\\src\\components\\coding\\codeSubmission\\CodeSubmissions.js":"34","E:\\project\\PlacePrep\\client\\src\\components\\sidebar\\SideBar.js":"35","E:\\project\\PlacePrep\\client\\src\\components\\coding\\codeSubmission\\CodingSub.js":"36","E:\\project\\PlacePrep\\client\\src\\components\\code\\CreateCodeQues.js":"37","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizPageSub.js":"38","E:\\project\\PlacePrep\\client\\src\\components\\code\\CodeQuestions.js":"39","E:\\project\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeQuizPage.js":"40","E:\\project\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeProblem.js":"41","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizSubmissions.js":"42","E:\\project\\PlacePrep\\client\\src\\components\\practiceProblems\\EditPracticeProblem.js":"43","E:\\project\\PlacePrep\\client\\src\\components\\practiceProblems\\AddTopics.js":"44","E:\\project\\PlacePrep\\client\\src\\components\\dashboard\\Dashboard.js":"45","E:\\project\\PlacePrep\\client\\src\\components\\coding\\CodingSolution.js":"46","E:\\project\\PlacePrep\\client\\src\\components\\code\\paginate.js":"47","E:\\project\\PlacePrep\\client\\src\\components\\code\\Pagination.js":"48","E:\\project\\PlacePrep\\client\\src\\components\\coding\\CodeDescription.js":"49","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\QuizCard.js":"50","E:\\project\\PlacePrep\\client\\src\\components\\coding\\CodeEditor.js":"51","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\CreateQuizQuestion.js":"52","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\QuizOption.js":"53","E:\\project\\PlacePrep\\client\\src\\store\\actions\\codeActions.js":"54","E:\\project\\PlacePrep\\client\\src\\components\\sidebar\\MenuList.js":"55","E:\\project\\PlacePrep\\client\\src\\components\\coding\\codeSubmission\\CodeSubTabRow.js":"56","E:\\project\\PlacePrep\\client\\src\\components\\dashboard\\DashboardPie.js":"57","E:\\project\\PlacePrep\\client\\src\\components\\dashboard\\DashboardCard.js":"58","E:\\project\\PlacePrep\\client\\src\\components\\coding\\codeSubmission\\CodeEditorSub.js":"59","E:\\project\\PlacePrep\\client\\src\\store\\actions\\practiceProblemActions.js":"60","E:\\project\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeQuizQues.js":"61","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizSubTabRow.js":"62","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizQuesSub.js":"63","E:\\project\\PlacePrep\\client\\src\\components\\practiceProblems\\CreateAptiQuestion.js":"64","E:\\project\\PlacePrep\\client\\src\\components\\practiceProblems\\AptiTopicsTemplate.js":"65","E:\\project\\PlacePrep\\client\\src\\components\\coding\\RunCodeFail.js":"66","E:\\project\\PlacePrep\\client\\src\\components\\coding\\SubmitCodeSuccess.js":"67","E:\\project\\PlacePrep\\client\\src\\components\\coding\\RunCodeSuccess.js":"68","E:\\project\\PlacePrep\\client\\src\\components\\layout\\MyModal.js":"69","E:\\project\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeQuizOption.js":"70","E:\\project\\PlacePrep\\client\\src\\components\\sidebar\\MenuItemData.js":"71","E:\\project\\PlacePrep\\client\\src\\components\\practiceProblems\\ViewAnswer.js":"72","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizOptionSub.js":"73","E:\\project\\PlacePrep\\client\\src\\components\\code\\CodeTable.js":"74","E:\\project\\PlacePrep\\client\\src\\components\\coding\\defaultCode.js":"75"},{"size":339,"mtime":1614246808381,"results":"76","hashOfConfig":"77"},{"size":292,"mtime":1614246808393,"results":"78","hashOfConfig":"77"},{"size":1990,"mtime":1615201088756,"results":"79","hashOfConfig":"77"},{"size":474,"mtime":1614247961956,"results":"80","hashOfConfig":"77"},{"size":460,"mtime":1614251446785,"results":"81","hashOfConfig":"77"},{"size":3223,"mtime":1615371096789,"results":"82","hashOfConfig":"77"},{"size":5145,"mtime":1614250909080,"results":"83","hashOfConfig":"77"},{"size":7233,"mtime":1615371096908,"results":"84","hashOfConfig":"77"},{"size":656,"mtime":1615017567903,"results":"85","hashOfConfig":"77"},{"size":1834,"mtime":1615017567896,"results":"86","hashOfConfig":"77"},{"size":853,"mtime":1615017567903,"results":"87","hashOfConfig":"77"},{"size":3709,"mtime":1615289483908,"results":"88","hashOfConfig":"77"},{"size":4165,"mtime":1615017567873,"results":"89","hashOfConfig":"77"},{"size":400,"mtime":1614248891434,"results":"90","hashOfConfig":"77"},{"size":5213,"mtime":1615371096910,"results":"91","hashOfConfig":"77"},{"size":6048,"mtime":1615371096910,"results":"92","hashOfConfig":"77"},{"size":4996,"mtime":1615201089148,"results":"93","hashOfConfig":"77"},{"size":6572,"mtime":1615017567959,"results":"94","hashOfConfig":"77"},{"size":428,"mtime":1614420791123,"results":"95","hashOfConfig":"77"},{"size":787,"mtime":1613041950809,"results":"96","hashOfConfig":"77"},{"size":8325,"mtime":1614668200626,"results":"97","hashOfConfig":"77"},{"size":5852,"mtime":1615371096883,"results":"98","hashOfConfig":"77"},{"size":2366,"mtime":1615371096788,"results":"99","hashOfConfig":"77"},{"size":10036,"mtime":1615371096909,"results":"100","hashOfConfig":"77"},{"size":3366,"mtime":1615371096881,"results":"101","hashOfConfig":"77"},{"size":1737,"mtime":1615201089070,"results":"102","hashOfConfig":"77"},{"size":2270,"mtime":1615371096862,"results":"103","hashOfConfig":"77"},{"size":2858,"mtime":1615371096881,"results":"104","hashOfConfig":"77"},{"size":10919,"mtime":1615371096879,"results":"105","hashOfConfig":"77"},{"size":10439,"mtime":1615371096880,"results":"106","hashOfConfig":"77"},{"size":465,"mtime":1615017567878,"results":"107","hashOfConfig":"77"},{"size":7158,"mtime":1615201089065,"results":"108","hashOfConfig":"77"},{"size":2038,"mtime":1615201090870,"results":"109","hashOfConfig":"77"},{"size":8468,"mtime":1615201089062,"results":"110","hashOfConfig":"77"},{"size":1678,"mtime":1615031922736,"results":"111","hashOfConfig":"77"},{"size":2488,"mtime":1615371096860,"results":"112","hashOfConfig":"77"},{"size":16581,"mtime":1615379130589,"results":"113","hashOfConfig":"77"},{"size":2048,"mtime":1615017567899,"results":"114","hashOfConfig":"77"},{"size":6474,"mtime":1615371096790,"results":"115","hashOfConfig":"77"},{"size":3620,"mtime":1615371096878,"results":"116","hashOfConfig":"77"},{"size":1559,"mtime":1615017567884,"results":"117","hashOfConfig":"77"},{"size":11666,"mtime":1615201089142,"results":"118","hashOfConfig":"77"},{"size":6360,"mtime":1615371096878,"results":"119","hashOfConfig":"77"},{"size":9518,"mtime":1615371096865,"results":"120","hashOfConfig":"77"},{"size":6240,"mtime":1615371096861,"results":"121","hashOfConfig":"77"},{"size":1330,"mtime":1615371096859,"results":"122","hashOfConfig":"77"},{"size":211,"mtime":1613991469736,"results":"123","hashOfConfig":"77"},{"size":1217,"mtime":1615028077344,"results":"124","hashOfConfig":"77"},{"size":2126,"mtime":1615199600906,"results":"125","hashOfConfig":"77"},{"size":4553,"mtime":1615371096880,"results":"126","hashOfConfig":"77"},{"size":6967,"mtime":1615202311368,"results":"127","hashOfConfig":"77"},{"size":7980,"mtime":1615379819032,"results":"128","hashOfConfig":"77"},{"size":725,"mtime":1615017567895,"results":"129","hashOfConfig":"77"},{"size":7649,"mtime":1615371096909,"results":"130","hashOfConfig":"77"},{"size":8126,"mtime":1615017567905,"results":"131","hashOfConfig":"77"},{"size":2194,"mtime":1615201089024,"results":"132","hashOfConfig":"77"},{"size":2189,"mtime":1615201089065,"results":"133","hashOfConfig":"77"},{"size":1032,"mtime":1615201089064,"results":"134","hashOfConfig":"77"},{"size":6992,"mtime":1615201088956,"results":"135","hashOfConfig":"77"},{"size":6647,"mtime":1615201089146,"results":"136","hashOfConfig":"77"},{"size":2361,"mtime":1615017567886,"results":"137","hashOfConfig":"77"},{"size":2225,"mtime":1615371096883,"results":"138","hashOfConfig":"77"},{"size":1696,"mtime":1615371096882,"results":"139","hashOfConfig":"77"},{"size":5540,"mtime":1615017567881,"results":"140","hashOfConfig":"77"},{"size":6227,"mtime":1615371096866,"results":"141","hashOfConfig":"77"},{"size":523,"mtime":1614578762819,"results":"142","hashOfConfig":"77"},{"size":1098,"mtime":1614578762819,"results":"143","hashOfConfig":"77"},{"size":1202,"mtime":1615198725413,"results":"144","hashOfConfig":"77"},{"size":1910,"mtime":1614246808263,"results":"145","hashOfConfig":"77"},{"size":1197,"mtime":1614246808356,"results":"146","hashOfConfig":"77"},{"size":2797,"mtime":1615017567904,"results":"147","hashOfConfig":"77"},{"size":1046,"mtime":1615017567887,"results":"148","hashOfConfig":"77"},{"size":1096,"mtime":1615017567898,"results":"149","hashOfConfig":"77"},{"size":3324,"mtime":1615371096792,"results":"150","hashOfConfig":"77"},{"size":428,"mtime":1615202489553,"results":"151","hashOfConfig":"77"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},"kwzxpx",{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"154"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"154"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"154"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"154"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"154"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"154"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"154"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"154"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"154"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"154"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},"E:\\project\\PlacePrep\\client\\src\\index.js",[],["313","314"],"E:\\project\\PlacePrep\\client\\src\\store\\configureStore.js",[],"E:\\project\\PlacePrep\\client\\src\\App.js",[],"E:\\project\\PlacePrep\\client\\src\\store\\reducers\\reducer.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\layout\\Alerts.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\auth\\Resetpassword.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\auth\\Register.js",[],"E:\\project\\PlacePrep\\client\\src\\store\\actions\\authActions.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\routing\\TestRoute.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\quiz\\QuizPage.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\routing\\PrivateRoute.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\layout\\Home.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\auth\\Login.js",[],"E:\\project\\PlacePrep\\client\\src\\store\\reducers\\alertReducers.js",[],"E:\\project\\PlacePrep\\client\\src\\store\\reducers\\authReducers.js",[],"E:\\project\\PlacePrep\\client\\src\\store\\reducers\\quizReducers.js",[],"E:\\project\\PlacePrep\\client\\src\\store\\reducers\\practiceProblemReducers.js",[],"E:\\project\\PlacePrep\\client\\src\\store\\reducers\\codeReducers.js",[],"E:\\project\\PlacePrep\\client\\src\\store\\actions\\alertActions.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\auth\\MessagePanel.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\auth\\UserProfile.js",[],"E:\\project\\PlacePrep\\client\\src\\store\\actions\\actionTypes.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\auth\\ResPassModal.js",[],"E:\\project\\PlacePrep\\client\\src\\store\\actions\\quizActions.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\quiz\\QuizQues.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\quiz\\QuizTimer.js",["315"],"import React, { useState, useEffect } from 'react';\r\n\r\nconst QuizTimer = (props) => {\r\n\r\n    let durInSec = Math.round((new Date(props.endAt).getTime() - new Date().getTime()) / 1000);\r\n    let durMin = Math.floor(durInSec / 60);\r\n    let durSec = durInSec % 60;\r\n\r\n    const [countdownDate, setCountdownDate] = useState(new Date(props.endAt).getTime());\r\n    const [timer, setTimer] = useState({\r\n        minutes: durMin,\r\n        seconds: durSec\r\n    });\r\n\r\n    let myInterval;\r\n    useEffect(() => {\r\n        // eslint-disable-next-line\r\n        myInterval = setInterval(() => setNewTime(), 1000);\r\n\r\n        return () => clearInterval(myInterval);\r\n\r\n    }, [timer]);\r\n\r\n    const setNewTime = () => {\r\n        if (timer.seconds <= 0 && timer.minutes <= 0) {\r\n            if(timer.seconds > -6 && timer.minutes > -2){\r\n                props.triggerSubmit();\r\n            }\r\n            return clearInterval(myInterval);\r\n        }\r\n        else if (countdownDate) {\r\n            const currentTime = new Date().getTime();\r\n\r\n            const distanceToDate = countdownDate - currentTime;\r\n\r\n            let minutes = Math.floor(\r\n                (distanceToDate % (1000 * 60 * 60)) / (1000 * 60),\r\n            );\r\n            let seconds = Math.floor((distanceToDate % (1000 * 60)) / 1000);\r\n            setTimer({ minutes, seconds });\r\n        }\r\n    };\r\n\r\n    return (\r\n        (timer.minutes <= 0 && timer.seconds <= 0) ?\r\n            (<span className='time_sec float-right mt-1 pr-1' >Time's Up!</span>)\r\n            :\r\n        (<span className='time_sec float-right mt-1 pr-1' >{timer.minutes < 10 ? `0${timer.minutes}` : timer.minutes}:{timer.seconds < 10 ? `0${timer.seconds}` : timer.seconds}</span>)\r\n    );\r\n};\r\n\r\nexport default QuizTimer;\r\n","E:\\project\\PlacePrep\\client\\src\\components\\layout\\Navbar.js",["316"],"import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../store/actions/authActions\";\r\n\r\nconst Navbars = (props) => {\r\n    const { logout, onClick } = props;\r\n    const { isAuthenticated, user } = props.auth;\r\n\r\n\r\n    const onlogout = () => {\r\n        logout();\r\n    };\r\n\r\n    const authLinks = (\r\n        <Fragment>\r\n            <span>\r\n                <img className=\"nav__user-img\" src={`/img/users/${user.photo}`} alt={`${user.photo}`} />\r\n                <span className='user-name'>Hello {user && user.name.split(' ')[0]}</span>\r\n            </span>\r\n            <span className=\"logout-div\">\r\n                <a href=\"#\" onClick={onlogout}>\r\n                    <i className=\"fa fa-sign-out\" aria-hidden=\"true\"></i>\r\n                    <span className=\"hide-sm\"> Logout</span>\r\n                </a>\r\n            </span>\r\n        </Fragment>\r\n    );\r\n    const guestLinks = (\r\n        <Fragment>\r\n            <Link to=\"/register\">Register</Link>\r\n            <Link to=\"/login\">Login</Link>\r\n        </Fragment>\r\n    );\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\r\n            <div id='sidebar-btn' onClick={onClick} >\r\n                <i className='fas fa-bars menu-icon' ></i>\r\n            </div>\r\n            <Navbar.Brand className=\"brand-name\">\r\n                <img\r\n                    alt=\"logo\"\r\n                    src=\"/assets/img/fullLogo.png\"\r\n                    className=\"d-inline-block align-top fullLogo\"\r\n                />{\" \"}\r\n                <img\r\n                    alt=\"logo\"\r\n                    src=\"/assets/img/logoName.png\"\r\n                    className=\"d-inline-block align-top logoName\"\r\n                />{\" \"}\r\n\r\n                {/* PlacePrep */}\r\n            </Navbar.Brand>\r\n            <Navbar.Collapse className=\"justify-content-end\">\r\n                <Navbar.Text>\r\n                    {isAuthenticated ? authLinks : guestLinks}\r\n                </Navbar.Text>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbars);\r\n","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\QuizCardPage.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\quiz\\CreateQuiz.js",["317"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./quiz.css\";\r\nimport { Button, Container, Form } from \"react-bootstrap\";\r\nimport QuizQuestion from \"./CreateQuizQuestion\";\r\nimport { connect } from \"react-redux\";\r\nimport { addQuiz, clearQuizErrors, clrQuizCreateSuccess } from \"../../store/actions/quizActions\";\r\nimport { setAlert } from \"../../store/actions/alertActions\";\r\n\r\nfunction CreateQuiz(props) {\r\n    const {\r\n        auth: { user },\r\n        quiz: { error, isCreated },\r\n        addQuiz,\r\n        clearQuizErrors,\r\n        clrQuizCreateSuccess,\r\n        setAlert,\r\n    } = props;\r\n\r\n\r\n    const [quiz, setQuiz] = useState({\r\n        title: '',\r\n        category: 'quantitative analysis',\r\n        topic: '',\r\n        duration: '',\r\n        questionWeightage: '',\r\n        questions: [{\r\n            id: 0,\r\n            question: '',\r\n            answers: ['', '', '', ''],\r\n            correctAnswer: ''\r\n        }]\r\n    });\r\n\r\n    const [lastId, setLastId] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        if (isCreated) {\r\n            clrQuizCreateSuccess();\r\n            setAlert('Quiz has been created', 'success');\r\n\r\n            setQuiz({\r\n                title: '',\r\n                category: 'quantitative analysis',\r\n                topic: '',\r\n                duration: '',\r\n                questionWeightage: '',\r\n                questions: [{\r\n                    id: 0,\r\n                    question: '',\r\n                    answers: ['', '', '', ''],\r\n                    correctAnswer: ''\r\n                }]\r\n            });\r\n        }\r\n\r\n        // eslint-disable-next-line\r\n    }, [isCreated]);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            clearQuizErrors();\r\n            setAlert(error, \"danger\");\r\n        }\r\n\r\n        // eslint-disable-next-line\r\n    }, [error]);\r\n\r\n    const handleAddQuesClick = () => {\r\n        const newQuesObj = {\r\n            id: lastId + 1,\r\n            question: \"\",\r\n            answers: [\"\", \"\", \"\", \"\"],\r\n            correctAnswer: \"\",\r\n        };\r\n\r\n        setLastId(lastId + 1);\r\n\r\n        const newQuesArray = [...quiz.questions, newQuesObj];\r\n        setQuiz({\r\n            ...quiz,\r\n            questions: newQuesArray,\r\n        });\r\n    };\r\n\r\n    const handleOnChange = (e) => {\r\n        setQuiz({\r\n            ...quiz,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOnChangeQues = (e, index) => {\r\n        const quesArray = [...quiz.questions];\r\n        if (e.target.name === \"question\" || e.target.name === \"correctAnswer\") {\r\n            quesArray[index][e.target.name] = e.target.value;\r\n            setQuiz({\r\n                ...quiz,\r\n                questions: quesArray,\r\n            });\r\n        } else {\r\n            let optIndex = 0;\r\n            if (e.target.name === \"optionB\") {\r\n                optIndex = 1;\r\n            } else if (e.target.name === \"optionC\") {\r\n                optIndex = 2;\r\n            } else if (e.target.name === \"optionD\") {\r\n                optIndex = 3;\r\n            }\r\n            quesArray[index].answers[optIndex] = e.target.value;\r\n            setQuiz({\r\n                ...quiz,\r\n                questions: quesArray,\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleOnDelete = (eleId) => {\r\n        const newQuesArray = quiz.questions.filter((ele) => {\r\n            return ele.id !== eleId;\r\n        });\r\n        setQuiz({\r\n            ...quiz,\r\n            questions: newQuesArray,\r\n        });\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (quiz.title === \"\" || quiz.topic === \"\" || quiz.duration === \"\" ||\r\n            quiz.questionWeightage === \"\") {\r\n            setAlert(\"Please enter all fields\", \"danger\");\r\n        } else {\r\n            let tempQuiz = JSON.parse(JSON.stringify(quiz));\r\n            addQuiz(tempQuiz);\r\n\r\n        };\r\n    };\r\n\r\n    return (\r\n        <Container className=\"container-quiz\">\r\n            <h3 className=\"text-center  mb-2 pt-4 \">QUIZ DETAILS</h3>\r\n            <div className=\"title-border mb-4\">\r\n                <span></span>\r\n            </div>\r\n            <div className=\"createquizform pb-1\">\r\n                <Form onSubmit={onSubmit}>\r\n                    <div className=\"row mb-2\">\r\n                        <div className=\"col-sm-6\">\r\n                            <Form.Group controlId=\"quiztitle\">\r\n                                <Form.Label>\r\n                                    <b>Quiz title</b>\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    className=\"quiz-inputFiled\"\r\n                                    name=\"title\"\r\n                                    value={quiz.title}\r\n                                    onChange={handleOnChange}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter Title\"\r\n                                />\r\n                            </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-sm-6\">\r\n                            <Form.Group controlId=\"category\">\r\n                                <Form.Label>\r\n                                    <b>Select Category</b>\r\n                                </Form.Label>\r\n                                <Form.Group controlId=\"SelectRowsPerpage\">\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        className=\"quiz-inputFiled\"\r\n                                        name=\"category\"\r\n                                        value={quiz.category}\r\n                                        onChange={handleOnChange}\r\n                                    >\r\n                                        <option\r\n                                            className=\"optionSelect\"\r\n                                            value=\"quantitative analysis\"\r\n                                        >\r\n                                            Quantitative Analysis\r\n                                        </option>\r\n                                        <option\r\n                                            className=\"optionSelect\"\r\n                                            value=\"logical reasoning\"\r\n                                        >\r\n                                            Logical Reasoning\r\n                                        </option>\r\n                                        <option\r\n                                            className=\"optionSelect\"\r\n                                            value=\"verbal ability\"\r\n                                        >\r\n                                            Verbal Ability\r\n                                        </option>\r\n                                        <option\r\n                                            className=\"optionSelect\"\r\n                                            value=\"other topics\"\r\n                                        >\r\n                                            Others\r\n                                        </option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mb-2\">\r\n                        <div className=\"col-sm-6 responsivelabel\">\r\n                            <Form.Group controlId=\"topics\">\r\n                                <Form.Label>\r\n                                    <b>Quiz topics</b>\r\n                                </Form.Label>\r\n                                <Form.Control\r\n                                    className=\"quiz-inputFiled \"\r\n                                    name=\"topic\"\r\n                                    value={quiz.topic}\r\n                                    onChange={handleOnChange}\r\n                                    type=\"\"\r\n                                    placeholder=\"Example: Probability, Trains...\"\r\n                                />\r\n                            </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-sm-3 responsivelabel\">\r\n                            <Form.Group controlId=\"duration\" >\r\n                                <Form.Label><b >Duration</b></Form.Label>\r\n                                <Form.Control className=\"quiz-inputFiled quizDuration \" name=\"duration\" value={quiz.duration} onChange={handleOnChange} type=\"number\" placeholder=\"Minutes only\" />\r\n                            </Form.Group>\r\n                        </div>\r\n                        <div className=\"col-sm-3 responsivelabel\">\r\n                            <Form.Group controlId=\"weightage\" >\r\n                                <Form.Label><b >Weightage</b></Form.Label>\r\n                                <Form.Control className=\"quiz-inputFiled quizDuration \" name=\"questionWeightage\" value={quiz.questionWeightage} onChange={handleOnChange} type=\"number\" placeholder=\"Marks\" />\r\n\r\n                            </Form.Group>\r\n                        </div>\r\n                    </div>\r\n                    <hr></hr>\r\n                    <h3 className=\"text-center  mb-2 pt-2 \">ADD QUESTIONS</h3>\r\n                    <div className=\"title-border mb-3\">\r\n                        <span></span>\r\n                    </div>\r\n\r\n                    {quiz.questions.map((ele, index) => (\r\n                        <QuizQuestion\r\n                            key={ele.id}\r\n                            index={index}\r\n                            onDeleteFunc={() => handleOnDelete(ele.id)}\r\n                            onChangeFunc={(e) => handleOnChangeQues(e, index)}\r\n                            quesObj={ele}\r\n                        />\r\n                    ))}\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-6\">\r\n                            <Button\r\n                                className=\"addquestbtn mb-2\"\r\n                                onClick={handleAddQuesClick}\r\n                            >\r\n                                {\" \"}\r\n                                Add Next Question{\" \"}\r\n                            </Button>\r\n                        </div>\r\n                        <div className=\"col-sm-6 text-center\">\r\n                            <Button className=\"createquiz mb-4\" type=\"submit\">\r\n                                Create Quiz\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        quiz: state.quiz,\r\n        auth: state.auth,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { addQuiz, clearQuizErrors, clrQuizCreateSuccess, setAlert })(CreateQuiz);\r\n","E:\\project\\PlacePrep\\client\\src\\components\\quiz\\EditQuiz.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\layout\\Spinner.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\dashboard\\UserTable.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\coding\\Coding.js",["318"],"import React, { useState, useEffect, Fragment } from \"react\";\r\nimport \"./Coding.css\";\r\nimport { Row, Col, Tabs, Tab } from \"react-bootstrap\";\r\nimport CodeDescription from \"./CodeDescription\";\r\nimport CodingSolution from \"./CodingSolution\";\r\nimport CodeEditor from \"./CodeEditor\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getQuestion } from \"../../store/actions/codeActions\";\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst Coding = (props) => {\r\n\r\n    const { getQuestion } = props;\r\n    const { current } = props.code;\r\n    const { slug } = useParams();\r\n\r\n    useEffect(() => {\r\n        getQuestion(slug);\r\n        \r\n\t\t//eslint-disable-next-line\r\n    }, []);\r\n\r\n    const [key, setKey] = useState(\"description\");\r\n\r\n    return (\r\n        <Fragment>\r\n            { current !== null ?\r\n                <Row className=\"coding-container\">\r\n                    <Col>\r\n                        <Tabs className='navTabs' activeKey={key} onSelect={(e) => setKey(e)}>\r\n                            <Tab eventKey=\"description\" title={<span><i className=\"fa fa-list-alt\" aria-hidden=\"true\"></i>Description</span>}>\r\n                                <CodeDescription current={current} />\r\n                            </Tab>\r\n                            {/* {current.solution &&} */}\r\n                            <Tab eventKey=\"solution\" title={<span><i className=\"fa fa-flask\" aria-hidden=\"true\"></i>Solution</span>}>\r\n                                <CodingSolution solution={current.solution} />\r\n                            </Tab>\r\n                        </Tabs>\r\n                    </Col>\r\n                    <Col className=\"editor-container\">\r\n                        <CodeEditor slugProp={slug} inputs={current.noOfInputs} quesId={current._id} />\r\n                    </Col>\r\n                </Row> : <Spinner />}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    code: state.code\r\n});\r\n\r\nexport default connect(mapStateToProps, { getQuestion })(Coding);","E:\\project\\PlacePrep\\client\\src\\components\\coding\\codeSubmission\\CodeSubmissions.js",["319","320"],"import React, { useEffect, Fragment, useState, useRef } from 'react';\r\nimport \"../../code/CodeQuestDisp.css\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport Container from 'react-bootstrap/Container';\r\nimport CodeSubTabRow from './CodeSubTabRow';\r\nimport Spinner from '../../layout/Spinner';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport Pagination from '../../code/Pagination';\r\nimport paginate from '../../code/paginate';\r\nimport {\r\n    getCodeSubmissions,\r\n    filterCodeSubmissions,\r\n    clearFilterCodeSub,\r\n} from '../../../store/actions/codeActions';\r\n\r\nconst CodeSubmissions = (props) => {\r\n    const { auth: { user },\r\n        code: { submissions, filteredSubmissions },\r\n        getCodeSubmissions,\r\n        filterCodeSubmissions,\r\n        clearFilterCodeSub,\r\n        match } = props;\r\n\r\n    const text = useRef('');\r\n\r\n    const [pageDetails, setPageDetails] = useState({\r\n        pageSize: 10,\r\n        currentPage: 1,\r\n        sortColumn: { path: \"submittedAt\", order: \"asc\" },\r\n    });\r\n    const { pageSize, currentPage, sortColumn } = pageDetails;\r\n\r\n\r\n    const { codeId } = match.params;\r\n\r\n    useEffect(() => {\r\n        if (user?.role === 'student') {\r\n            getCodeSubmissions({ user: user._id });\r\n        }\r\n        else if (user?.role === 'faculty') {\r\n            getCodeSubmissions({ code: codeId });\r\n        }\r\n        return () => {\r\n        };\r\n    }, [user]);\r\n\r\n    if (submissions !== null && submissions.length === 0) {\r\n        return <h4>Currently There are No Code Submissions.</h4>;\r\n    }\r\n\r\n    const handleFilterChange = (e) => {\r\n        if (text.current.value !== \"\") {\r\n            filterCodeSubmissions(e.target.value, user?.role === 'student' ? true : false);\r\n        } else {\r\n            clearFilterCodeSub();\r\n        }\r\n    };\r\n\r\n    const handlePageChange = (page) => {\r\n        setPageDetails({ ...pageDetails, currentPage: page });\r\n    };\r\n\r\n    const handleOnChange = (e) => {\r\n        setPageDetails({ ...pageDetails, pageSize: e.target.value });\r\n    };\r\n\r\n    const handleSort = (path) => {\r\n        const sortColumn = { ...pageDetails.sortColumn };\r\n        if (sortColumn.path === path)\r\n            sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n        else {\r\n            sortColumn.path = path;\r\n            sortColumn.order = \"asc\";\r\n        }\r\n        setPageDetails({ ...pageDetails, sortColumn });\r\n    };\r\n\r\n    const filteredSub = filteredSubmissions !== null ? filteredSubmissions : submissions;\r\n\r\n    const sortedSub = _.orderBy(\r\n        filteredSub,\r\n        [\r\n            function (item) {\r\n                if (sortColumn.path === \"status\") {\r\n                    return item.status;\r\n                }\r\n                else if (sortColumn.path === 'name') {\r\n                    return item.user.name;\r\n                }\r\n                else if (sortColumn.path === 'submittedAt') {\r\n                    return new Date(item.createdAt).getTime();\r\n                }\r\n                else if (sortColumn.path === 'language') {\r\n                    return item.language;\r\n                }\r\n                else if (sortColumn.path === 'title') {\r\n                    return item.question.title;\r\n                }\r\n                else {\r\n                    return item.user.name.toLowerCase();\r\n                };\r\n\r\n            },\r\n        ],\r\n        [sortColumn.order]\r\n    );\r\n\r\n    const newSubmissions = paginate(sortedSub, currentPage, pageSize);\r\n    const subNumber = _.range(1, newSubmissions.length + 1);\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            {submissions !== null ? (<Container className=\"container-codeQuest\">\r\n                <h3 className=\"text-center  mb-2 pt-4 \">\r\n                    Code Submissions\r\n        </h3>\r\n                <div className=\"title-border mb-4\">\r\n                    <span></span>\r\n                </div>\r\n                <div className=\"displayQuest pb-2\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 pb-2\">\r\n                            <Form>\r\n                                <Form.Group controlId=\"codingquestionSearch\">\r\n                                    <Form.Control\r\n                                        className=\" codingQuestSearch\"\r\n                                        type=\"text\"\r\n                                        ref={text}\r\n                                        placeholder=\"Search submissions\"\r\n                                        onChange={handleFilterChange}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                    <div className='table-responsive' >\r\n                        <table className=\"table  \">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">#</th>\r\n                                    <th scope=\"col\" onClick={() => handleSort(`${user?.role === 'student' ? 'title' : 'name'}`)}>{user?.role === 'student' ? 'Title' : 'Name'}</th>\r\n                                    <th scope=\"col\" onClick={() => handleSort(\"submittedAt\")} >Submitted At</th>\r\n                                    <th scope=\"col\" onClick={() => handleSort(\"language\")} >Language</th>\r\n                                    <th scope=\"col\" onClick={() => handleSort(\"status\")} >Status</th>\r\n                                    {user?.role === 'student' && <th scope=\"col\">Operation</th>}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"tbodyCode\">\r\n                                {/* {submissions.map((ele, index) => <QuizSubTabRow key={ele._id} name={ele.user.name} eleObj={ele} idx={index} />)} */}\r\n                                {newSubmissions.map((ele, index) => <CodeSubTabRow key={ele._id} name={ele.user.name} eleObj={ele} idx={index} />)}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"ml-3 \">\r\n                            <Form>\r\n                                <Form.Group controlId=\"SelectRowsPerpage\">\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        className=\"dispCode-inputFiled rowsPerPg\"\r\n                                        value={pageSize}\r\n                                        onChange={handleOnChange}\r\n                                    >\r\n                                        <option value={10} className=\"optionSelect\">\r\n                                            10\r\n                                </option>\r\n                                        <option value={25} className=\"optionSelect\">\r\n                                            25\r\n                                </option>\r\n                                        <option value={50} className=\"optionSelect\">\r\n                                            50\r\n                                </option>\r\n                                        <option value={100} className=\"optionSelect\">\r\n                                            100\r\n                                </option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </div>\r\n                        <span className=\"labelRowsPerPg mt-2 col-4\">\r\n                            rows per page.\r\n                </span>\r\n                        <Pagination\r\n                            itemCounts={filteredSub.length}\r\n                            pageSize={pageSize}\r\n                            currentPage={currentPage}\r\n                            onPageChange={handlePageChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </Container>) :\r\n                (\r\n                    <Spinner />\r\n                )\r\n            }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    code: state.code,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    getCodeSubmissions,\r\n    filterCodeSubmissions,\r\n    clearFilterCodeSub\r\n})(CodeSubmissions);\r\n","E:\\project\\PlacePrep\\client\\src\\components\\sidebar\\SideBar.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\coding\\codeSubmission\\CodingSub.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\code\\CreateCodeQues.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizPageSub.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\code\\CodeQuestions.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeQuizPage.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeProblem.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizSubmissions.js",["321","322"],"import React, { useEffect, Fragment, useState, useRef } from 'react';\r\nimport \"../../code/CodeQuestDisp.css\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport Container from 'react-bootstrap/Container';\r\nimport QuizSubTabRow from './QuizSubTabRow';\r\nimport Spinner from '../../layout/Spinner';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport Pagination from '../../code/Pagination';\r\nimport paginate from '../../code/paginate';\r\nimport {\r\n    getQuizSubmissions,\r\n    getQuizSubmission,\r\n    filterQuizSubmissions,\r\n    clearFilterQuizSub\r\n} from '../../../store/actions/quizActions';\r\n\r\nconst QuizSubmissions = (props) => {\r\n    const { auth: { user },\r\n        quiz: { submissions, filteredSubmissions },\r\n        getQuizSubmissions,\r\n        filterQuizSubmissions,\r\n        clearFilterQuizSub,\r\n        match } = props;\r\n\r\n    const text = useRef('');\r\n\r\n    const [pageDetails, setPageDetails] = useState({\r\n        pageSize: 10,\r\n        currentPage: 1,\r\n        sortColumn: { path: \"submittedAt\", order: \"asc\" },\r\n    });\r\n    const { pageSize, currentPage, sortColumn } = pageDetails;\r\n\r\n\r\n    const { quizId } = match.params;\r\n\r\n    useEffect(() => {\r\n        if (user?.role === 'student') {\r\n            getQuizSubmissions({ user: user._id });\r\n        }\r\n        else if (user?.role === 'faculty') {\r\n            getQuizSubmissions({ quiz: quizId });\r\n        }\r\n        return () => {\r\n        };\r\n\r\n        // eslint-disable-next-line\r\n    }, [user]);\r\n\r\n    if (submissions !== null && submissions.length === 0) {\r\n        return <h4>Currently There are No Quiz Submissions.</h4>;\r\n    }\r\n\r\n    const handleFilterChange = (e) => {\r\n        if (text.current.value !== \"\") {\r\n            filterQuizSubmissions(e.target.value, user?.role === 'student' ? true : false);\r\n        } else {\r\n            clearFilterQuizSub();\r\n        }\r\n    };\r\n\r\n    const handlePageChange = (page) => {\r\n        setPageDetails({ ...pageDetails, currentPage: page });\r\n    };\r\n\r\n    const handleOnChange = (e) => {\r\n        setPageDetails({ ...pageDetails, pageSize: e.target.value });\r\n    };\r\n\r\n    const handleSort = (path) => {\r\n        const sortColumn = { ...pageDetails.sortColumn };\r\n        if (sortColumn.path === path)\r\n            sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n        else {\r\n            sortColumn.path = path;\r\n            sortColumn.order = \"asc\";\r\n        }\r\n        setPageDetails({ ...pageDetails, sortColumn });\r\n    };\r\n\r\n    const filteredSub = filteredSubmissions !== null ? filteredSubmissions : submissions;\r\n\r\n    const sortedSub = _.orderBy(\r\n        filteredSub,\r\n        [\r\n            function (item) {\r\n                if (sortColumn.path === \"score\") {\r\n                    return item.score;\r\n                }\r\n                else if (sortColumn.path === 'name') {\r\n                    return item.user.name;\r\n                }\r\n                else if (sortColumn.path === 'submittedAt') {\r\n                    return new Date(item.createdAt).getTime();\r\n                }\r\n                else if (sortColumn.path === 'timeTaken') {\r\n                    let min = item.timeTaken.minutes;\r\n                    let sec = item.timeTaken.seconds;\r\n                    let totTimeInSec = (min * 60) + sec;\r\n                    return totTimeInSec;\r\n                }\r\n                else if (sortColumn.path === 'title') {\r\n                    return item.quiz.title;\r\n                }\r\n                else {\r\n                    return item.user.name.toLowerCase();\r\n                };\r\n\r\n            },\r\n        ],\r\n        [sortColumn.order]\r\n    );\r\n\r\n    const newSubmissions = paginate(sortedSub, currentPage, pageSize);\r\n    // const subNumber = _.range(1, newSubmissions.length + 1);\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            {submissions !== null ? (<Container className=\"container-codeQuest\">\r\n                <h3 className=\"text-center  mb-2 pt-4 \">\r\n                    Quiz Submissions\r\n        </h3>\r\n                <div className=\"title-border mb-4\">\r\n                    <span></span>\r\n                </div>\r\n                <div className=\"displayQuest pb-2\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 pb-2\">\r\n                            <Form>\r\n                                <Form.Group controlId=\"codingquestionSearch\">\r\n                                    <Form.Control\r\n                                        className=\" codingQuestSearch\"\r\n                                        type=\"text\"\r\n                                        ref={text}\r\n                                        placeholder=\"Search submissions\"\r\n                                        onChange={handleFilterChange}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                    <div className='table-responsive' >\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">#</th>\r\n                                    <th scope=\"col\" onClick={() => handleSort(`${user?.role === 'student' ? 'title' : 'name'}`)}>{user?.role === 'student' ? 'Title' : 'Name'}</th>\r\n                                    <th scope=\"col\" onClick={() => handleSort(\"submittedAt\")} >Submitted At</th>\r\n                                    <th scope=\"col\" onClick={() => handleSort(\"timeTaken\")} >Time Taken</th>\r\n                                    <th scope=\"col\" onClick={() => handleSort(\"score\")} >Score</th>\r\n                                    {(user?.role === 'faculty' || user?.role === 'admin') && <th scope=\"col\">Operation</th>}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className=\"tbodyCode\">\r\n                                {/* {submissions.map((ele, index) => <QuizSubTabRow key={ele._id} name={ele.user.name} eleObj={ele} idx={index} />)} */}\r\n                                {newSubmissions.map((ele, index) => <QuizSubTabRow key={ele._id} name={ele.user.name} eleObj={ele} idx={index} />)}\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"ml-3 \">\r\n                            <Form>\r\n                                <Form.Group controlId=\"SelectRowsPerpage\">\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        className=\"dispCode-inputFiled rowsPerPg\"\r\n                                        value={pageSize}\r\n                                        onChange={handleOnChange}\r\n                                    >\r\n                                        <option value={10} className=\"optionSelect\">\r\n                                            10\r\n                                </option>\r\n                                        <option value={25} className=\"optionSelect\">\r\n                                            25\r\n                                </option>\r\n                                        <option value={50} className=\"optionSelect\">\r\n                                            50\r\n                                </option>\r\n                                        <option value={100} className=\"optionSelect\">\r\n                                            100\r\n                                </option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </div>\r\n                        <span className=\"labelRowsPerPg mt-2 col-4\">\r\n                            rows per page.\r\n                </span>\r\n                        <Pagination\r\n                            itemCounts={filteredSub.length}\r\n                            pageSize={pageSize}\r\n                            currentPage={currentPage}\r\n                            onPageChange={handlePageChange}\r\n                        />\r\n\r\n                        <div className=\" paginatt \">\r\n                            <nav aria-label=\"Page navigation example\">\r\n                                <ul className=\"pagination nav2\">\r\n                                    <li className=\"\">\r\n                                        <a\r\n                                            className=\"page-link\"\r\n                                            href=\"#\"\r\n                                            aria-label=\"Previous\"\r\n                                        >\r\n                                            <span\r\n                                                aria-hidden=\"true\"\r\n                                                className=\"pagntColor\"\r\n                                            >\r\n                                                &laquo;\r\n                                    </span>\r\n                                        </a>\r\n                                    </li>\r\n                                    <li className=\" \">\r\n                                        <a\r\n                                            className=\"page-link pagntColor\"\r\n                                            href=\"#1\"\r\n                                        >\r\n                                            1\r\n                                </a>\r\n                                    </li>\r\n                                    <li className=\"active\">\r\n                                        <a\r\n                                            className=\"page-link pagntColor \"\r\n                                            href=\"#2\"\r\n                                        >\r\n                                            2\r\n                                </a>\r\n                                    </li>\r\n                                    <li className=\" \">\r\n                                        <a\r\n                                            className=\"page-link pagntColor \"\r\n                                            href=\"#3\"\r\n                                        >\r\n                                            3\r\n                                </a>\r\n                                    </li>\r\n                                    <li className=\"\">\r\n                                        <a\r\n                                            className=\"page-link\"\r\n                                            href=\"#\"\r\n                                            aria-label=\"Next\"\r\n                                        >\r\n                                            <span\r\n                                                aria-hidden=\"true\"\r\n                                                className=\"pagntColor\"\r\n                                            >\r\n                                                &raquo;\r\n                                    </span>\r\n                                        </a>\r\n                                    </li>\r\n                                </ul>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>) :\r\n                (\r\n                    <Spinner />\r\n                )\r\n            }\r\n        </Fragment >\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    quiz: state.quiz,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    getQuizSubmissions,\r\n    getQuizSubmission,\r\n    filterQuizSubmissions,\r\n    clearFilterQuizSub,\r\n})(QuizSubmissions);\r\n","E:\\project\\PlacePrep\\client\\src\\components\\practiceProblems\\EditPracticeProblem.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\practiceProblems\\AddTopics.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\dashboard\\Dashboard.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\coding\\CodingSolution.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\code\\paginate.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\code\\Pagination.js",["323"],"import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nconst Pagination = (props) => {\r\n    const { itemCounts, pageSize, currentPage, onPageChange } = props;\r\n    const pageCounts = Math.ceil(itemCounts / pageSize);\r\n    if (pageCounts === 1) return null;\r\n    const pages = _.range(1, pageCounts + 1);\r\n\r\n    return (\r\n        <div className=\" paginatt \">\r\n            <nav aria-label=\"Page navigation example\">\r\n                <ul className=\"pagination nav2\">\r\n                    {pages.map((page) => (\r\n                        <li\r\n                            key={page}\r\n                            className={currentPage === page ? \"active\" : \" \"}\r\n                        >\r\n                            <a\r\n                                className=\"page-link pagntColor\"\r\n                                href=\"#\"\r\n                                style={{ cursor: 'pointer' }}\r\n                                onClick={() => onPageChange(page)}\r\n                            >\r\n                                {page}\r\n                            </a>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","E:\\project\\PlacePrep\\client\\src\\components\\coding\\CodeDescription.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\quiz\\QuizCard.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\coding\\CodeEditor.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\quiz\\CreateQuizQuestion.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\quiz\\QuizOption.js",[],"E:\\project\\PlacePrep\\client\\src\\store\\actions\\codeActions.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\sidebar\\MenuList.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\coding\\codeSubmission\\CodeSubTabRow.js",["324","325"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { deleteCodeSubmission } from '../../../store/actions/codeActions';\r\n\r\nconst CodeSubTabRow = (props) => {\r\n    const { auth: { user },\r\n        eleObj, idx, name, deleteCodeSubmission } = props;\r\n\r\n    return (\r\n        <tr>\r\n            <th scope=\"row\" >{idx + 1}</th>\r\n            {(user.role === 'faculty' || user.role === 'admin') ?\r\n                <td ><Link className=\"questTitle\" to={`/codeSubmission/${eleObj._id}`}>{name}</Link></td>\r\n                :\r\n                <td ><Link className=\"questTitle\" to={`/codeSubmission/${eleObj._id}`}>{eleObj.question.title}</Link></td>\r\n            }\r\n            <td ><span>{new Date(eleObj.createdAt).toLocaleString('en-us', { day: '2-digit', month: 'short', year: '2-digit', hour: '2-digit', minute: '2-digit' })}</span></td>\r\n            <td>{eleObj.language}</td>\r\n            <td >\r\n                {eleObj.status === \"Accepted\" && (\r\n                    <span className=\"subStatus badge badgeSuccess \">\r\n                        {eleObj.status}\r\n                    </span>\r\n                )}\r\n                {eleObj.status === \"Not Accepted\" && (\r\n                    <span className=\"subStatus badge badgeWarning \">\r\n                        {eleObj.status}\r\n                    </span>\r\n                )}\r\n                {eleObj.status === \"Compile-time Error\" || \"Runtime Error\" && (\r\n                    <span className=\"subStatus badge badgeDanger \">\r\n                        {eleObj.status}\r\n                    </span>\r\n                )}\r\n            </td>\r\n            {user.role === 'student' && <td >\r\n                <span className='pl-4' style={{ cursor: 'pointer' }} onClick={() => deleteCodeSubmission(eleObj._id)} >\r\n                    <i className=\"fa fa-trash operation-D mr-3 mt-1 op\" aria-hidden=\"true\" ></i>\r\n                </span></td>}\r\n        </tr>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        auth: state.auth,\r\n        code: state.code\r\n    });\r\n};\r\n\r\nexport default connect(mapStateToProps, { deleteCodeSubmission })(CodeSubTabRow);\r\n","E:\\project\\PlacePrep\\client\\src\\components\\dashboard\\DashboardPie.js",["326","327"],"import React from \"react\";\r\nimport { PieChart, Pie, Tooltip, ResponsiveContainer } from \"recharts\";\r\n\r\nconst DashboardPie = (props) => {\r\n\tconst { easy, medium, hard } = props.submissions;\r\n\t///piechart data\r\n\tconst data01 = [\r\n\t\t{ name: \"Easy\", value: easy, fill: \"#5cb85c\" },\r\n\t\t{ name: \"Medium\", value: 200, fill: \"#f0ad4e\" },\r\n\t\t{ name: \"Hard\", value: 300, fill: \"#d9534f\" },\r\n\t];\r\n\r\n\tconst RADIAN = Math.PI / 180;\r\n\tconst renderCustomizedLabel = ({\r\n\t\tcx,\r\n\t\tcy,\r\n\t\tmidAngle,\r\n\t\tinnerRadius,\r\n\t\touterRadius,\r\n\t\tpercent,\r\n\t\tindex,\r\n\t}) => {\r\n\t\tconst radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n\t\tconst x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n\t\tconst y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n\t\treturn (\r\n\t\t\t<text\r\n\t\t\t\tx={x}\r\n\t\t\t\ty={y}\r\n\t\t\t\tfill=\"white\"\r\n\t\t\t\ttextAnchor={x > cx ? \"start\" : \"end\"}\r\n\t\t\t\tdominantBaseline=\"central\"\r\n\t\t\t>\r\n\t\t\t\t{percent !== 0 ? `${(percent * 100).toFixed(0)}%` : \"\"}\r\n\t\t\t</text>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"card mb-3 cardPie\">\r\n\t\t\t<div className=\"card-header text-center pieHeader\">\r\n\t\t\t\t<h6 className=\"text-white mb-0\">Your Coding Analytics</h6>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"card-body\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-md-4\">\r\n\t\t\t\t\t\t<ResponsiveContainer width=\"100%\" height={210}>\r\n\t\t\t\t\t\t\t<PieChart width={350} height={200}>\r\n\t\t\t\t\t\t\t\t<Pie\r\n\t\t\t\t\t\t\t\t\tdataKey=\"value\"\r\n\t\t\t\t\t\t\t\t\tisAnimationActive={false}\r\n\t\t\t\t\t\t\t\t\tdata={data01}\r\n\t\t\t\t\t\t\t\t\tcx=\"50%\"\r\n\t\t\t\t\t\t\t\t\tcy=\"55%\"\r\n\t\t\t\t\t\t\t\t\touterRadius={80}\r\n\t\t\t\t\t\t\t\t\tlabel={renderCustomizedLabel}\r\n\t\t\t\t\t\t\t\t\tlabelLine={false}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Tooltip />\r\n\t\t\t\t\t\t\t</PieChart>\r\n\t\t\t\t\t\t</ResponsiveContainer>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-md-8 inlineParent text-center \">\r\n\t\t\t\t\t\t{data01.map((data, index) => (\r\n\t\t\t\t\t\t\t<div key={index} className=\"inline\">\r\n\t\t\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"badge indicator text-white\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: `${data.fill}`,\r\n\t\t\t\t\t\t\t\t\t\t\twidth: \"150px\",\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{data.name} ({data.value})\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DashboardPie;\r\n","E:\\project\\PlacePrep\\client\\src\\components\\dashboard\\DashboardCard.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\coding\\codeSubmission\\CodeEditorSub.js",["328"],"import React, { Fragment, useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/eclipse.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/theme/blackboard.css\";\r\nimport \"codemirror/theme/base16-light.css\";\r\nimport \"codemirror/theme/ayu-mirage.css\";\r\nimport \"codemirror/addon/edit/matchbrackets\";\r\nimport \"codemirror/addon/edit/closebrackets\";\r\nimport \"codemirror/addon/scroll/simplescrollbars.css\";\r\nimport \"codemirror/addon/scroll/simplescrollbars\";\r\nimport \"codemirror/mode/clike/clike\";\r\nimport \"codemirror/mode/python/python\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    runCode,\r\n    submitCode,\r\n    resetCode,\r\n} from \"../../../store/actions/codeActions\";\r\nimport RunCodeSuccess from '../RunCodeSuccess';\r\nimport RunCodeFail from '../RunCodeFail';\r\nimport SubmitCodeSuccess from '../SubmitCodeSuccess';\r\n\r\n// require(\"codemirror/addon/scroll/simplescrollbars.js\");\r\n\r\nconst CodeEditor = (props) => {\r\n    let { auth: { user }, code: { userCode, runSubmit },\r\n        runCode,\r\n        submitCode,\r\n        resetCode,\r\n        userSolution, language } = props;\r\n\r\n    if (language === 'C') {\r\n        language = 'text/x-csrc';\r\n    }\r\n    else if (language === 'C++') {\r\n        language = 'text/x-c++src';\r\n    }\r\n    else if (language === 'Java') {\r\n        language = 'text/x-java';\r\n    }\r\n    else if (language === 'Python') {\r\n        language = 'text/x-python';\r\n    }\r\n\r\n    const [editorSelect, setEditorSelect] = useState({\r\n        lang: language,\r\n        theme: \"material\",\r\n        mime: \"text/x-csrc\",\r\n    });\r\n\r\n\r\n    const [showConsole, setShowConsole] = useState(false);\r\n    const [code, setCode] = useState(userSolution);\r\n\r\n\r\n    const handleOnChange = (e) => {\r\n        let selectedMime = e.target.selectedOptions[0].getAttribute(\r\n            \"data-mime\"\r\n        );\r\n        setEditorSelect({\r\n            ...editorSelect,\r\n            [e.target.name]: e.target.value,\r\n            mime: selectedMime,\r\n        });\r\n    };\r\n    let options = {\r\n        lineNumbers: true,\r\n        mode: editorSelect.lang,\r\n        theme: editorSelect.theme,\r\n        mime: editorSelect.mime,\r\n        styleActiveLine: true,\r\n        lineWrapping: true,\r\n        matchBrackets: true,\r\n        autoCloseBrackets: true,\r\n        scrollbarStyle: \"overlay\",\r\n    };\r\n\r\n    // const handleOnBeforeChangeCode = (editor, data, value) => {\r\n    //     setCode(value)\r\n\r\n    // }\r\n    const handleOnRun = () => {\r\n        setShowConsole(true);\r\n        runCode({ code, lang: editorSelect.lang, slug: props.slugProp, noOfInputs: props.inputs });\r\n    };\r\n\r\n\r\n    const handleOnSubmit = () => {\r\n        setShowConsole(true);\r\n        submitCode({ code, lang: editorSelect.lang, slug: props.slugProp, noOfInputs: props.inputs }, props.quesId);\r\n    };\r\n\r\n    const handleOnChangeCode = (editor, data, newCode) => {\r\n        setCode(newCode);\r\n    };\r\n\r\n    const handleOnClick = (e) => {\r\n        if (e.target.value === \"resetCode\") {\r\n            setCode(\"\");\r\n        }\r\n    };\r\n    return (\r\n        <Fragment>\r\n            <div className=\"head\">\r\n                <Form inline className=\"editor-option-form\">\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        name=\"lang\"\r\n                        value={editorSelect.lang}\r\n                        className=\"mr-sm-2 editor-select\"\r\n                        onChange={handleOnChange}\r\n                    >\r\n                        <option value=\"text/x-csrc\" data-mime=\"text/x-csrc\">\r\n                            C\r\n                        </option>\r\n                        <option value=\"text/x-c++src\" data-mime=\"text/x-c++src\">\r\n                            C++\r\n                        </option>\r\n                        <option value=\"text/x-java\" data-mime=\"text/x-java\">\r\n                            Java\r\n                        </option>\r\n                        <option value=\"text/x-python\" data-mime=\"text/x-python\">\r\n                            Python\r\n                        </option>\r\n                    </Form.Control>\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        name=\"theme\"\r\n                        className=\"mr-sm-2 editor-select\"\r\n                        onChange={handleOnChange}\r\n                    >\r\n                        <option value=\"material\">Material</option>\r\n                        <option value=\"ayu-mirage\">Ayu Mirage</option>\r\n                        <option value=\"base16-light\">light</option>\r\n                        <option value=\"blackboard\">Blackboard</option>\r\n                        <option value=\"eclipse\">Eclipse</option>\r\n                    </Form.Control>\r\n                </Form>\r\n            </div>\r\n            <CodeMirror\r\n                value={code}\r\n                options={options}\r\n                autoFocus={true}\r\n                onBeforeChange={handleOnChangeCode}\r\n                onChange={handleOnChangeCode}\r\n            />\r\n            <div className=\"editor-controls\">\r\n                <div>\r\n                    <Button\r\n                        className=\"button reset-code-btn\"\r\n                        value=\"resetCode\"\r\n                        onClick={handleOnClick}\r\n                    >\r\n                        <i className=\"fa fa-undo\" aria-hidden=\"true\"></i>\r\n                        Reset Code\r\n                    </Button>\r\n                </div>\r\n                <div className=\"editor-actions\">\r\n                    <Button className=\"button run-code-btn\" onClick={handleOnRun}>\r\n                        <i className=\"fa fa-play\" aria-hidden=\"true\"></i>\r\n                        <span>Run Code</span>\r\n                    </Button>\r\n                    {user?.role === 'student' && <Button className=\"button submit-code-btn\" onClick={handleOnSubmit}>Submit</Button>}\r\n                </div>\r\n            </div>\r\n            <div className=\"console-container\" style={{ display: `${showConsole ? 'block' : 'none'}` }}>\r\n                {userCode ? (\r\n                    <div style={{ padding: '20px', backgroundColor: 'aliceblue' }} >\r\n                        {userCode.error ? (\r\n                            <RunCodeFail userCodeObj={userCode} />\r\n                        )\r\n                            : (\r\n                                runSubmit === 'run' ? <RunCodeSuccess userCodeObj={userCode} />\r\n                                    : <SubmitCodeSuccess userCodeObj={userCode} />\r\n\r\n                            )\r\n                        }\r\n                    </div>\r\n\r\n                )\r\n                    : <h4>Processing...</h4>}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    code: state.code,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { runCode, submitCode, resetCode })(\r\n    CodeEditor\r\n);\r\n","E:\\project\\PlacePrep\\client\\src\\store\\actions\\practiceProblemActions.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeQuizQues.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizSubTabRow.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizQuesSub.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\practiceProblems\\CreateAptiQuestion.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\practiceProblems\\AptiTopicsTemplate.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\coding\\RunCodeFail.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\coding\\SubmitCodeSuccess.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\coding\\RunCodeSuccess.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\layout\\MyModal.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\practiceProblems\\PracticeQuizOption.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\sidebar\\MenuItemData.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\practiceProblems\\ViewAnswer.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\quiz\\quizSubmission\\QuizOptionSub.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\code\\CodeTable.js",[],"E:\\project\\PlacePrep\\client\\src\\components\\coding\\defaultCode.js",[],{"ruleId":"329","replacedBy":"330"},{"ruleId":"331","replacedBy":"332"},{"ruleId":"333","severity":1,"message":"334","line":9,"column":27,"nodeType":"335","messageId":"336","endLine":9,"endColumn":43},{"ruleId":"337","severity":1,"message":"338","line":23,"column":17,"nodeType":"339","endLine":23,"endColumn":48},{"ruleId":"333","severity":1,"message":"340","line":11,"column":17,"nodeType":"335","messageId":"336","endLine":11,"endColumn":21},{"ruleId":"341","severity":1,"message":"342","line":20,"column":8,"nodeType":"343","endLine":20,"endColumn":10,"suggestions":"344"},{"ruleId":"341","severity":1,"message":"345","line":46,"column":8,"nodeType":"343","endLine":46,"endColumn":14,"suggestions":"346"},{"ruleId":"333","severity":1,"message":"347","line":110,"column":11,"nodeType":"335","messageId":"336","endLine":110,"endColumn":20},{"ruleId":"337","severity":1,"message":"338","line":204,"column":41,"nodeType":"339","endLine":208,"endColumn":42},{"ruleId":"337","severity":1,"message":"338","line":242,"column":41,"nodeType":"339","endLine":246,"endColumn":42},{"ruleId":"337","severity":1,"message":"338","line":19,"column":29,"nodeType":"339","endLine":24,"endColumn":30},{"ruleId":"348","severity":1,"message":"349","line":31,"column":57,"nodeType":"350","messageId":"351","endLine":31,"endColumn":59},{"ruleId":"348","severity":1,"message":"349","line":31,"column":76,"nodeType":"350","messageId":"351","endLine":31,"endColumn":78},{"ruleId":"333","severity":1,"message":"352","line":5,"column":16,"nodeType":"335","messageId":"336","endLine":5,"endColumn":22},{"ruleId":"333","severity":1,"message":"353","line":5,"column":24,"nodeType":"335","messageId":"336","endLine":5,"endColumn":28},{"ruleId":"333","severity":1,"message":"354","line":32,"column":9,"nodeType":"335","messageId":"336","endLine":32,"endColumn":18},"no-native-reassign",["355"],"no-negated-in-lhs",["356"],"no-unused-vars","'setCountdownDate' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getQuestion' and 'slug'. Either include them or remove the dependency array.","ArrayExpression",["357"],"React Hook useEffect has missing dependencies: 'codeId' and 'getCodeSubmissions'. Either include them or remove the dependency array.",["358"],"'subNumber' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'medium' is assigned a value but never used.","'hard' is assigned a value but never used.","'resetCode' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},"Update the dependencies array to be: [getQuestion, slug]",{"range":"363","text":"364"},"Update the dependencies array to be: [codeId, getCodeSubmissions, user]",{"range":"365","text":"366"},[675,677],"[getQuestion, slug]",[1419,1425],"[codeId, getCodeSubmissions, user]"]